[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "npc-engine"
version = "1.0.0"
description = "World-class intelligent NPC backend framework powered by Google ADK for game developers"
authors = ["NPCEngine Team <team@npcengine.dev>"]
readme = "README.md"
homepage = "https://github.com/your-org/npc-engine"
repository = "https://github.com/your-org/npc-engine"
documentation = "https://docs.npcengine.dev"
license = "MIT"
keywords = ["npc", "ai", "game-development", "google-adk", "agent", "llm"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
packages = [{include = "npc_engine"}]

[tool.poetry.dependencies]
python = "^3.9"
google-adk = "^1.0.0"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.0"
alembic = "^1.13.0"
structlog = "^23.2.0"
prometheus-client = "^0.19.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.1"
pre-commit = "^3.5.0"
httpx = "^0.25.0"
ruff = "^0.1.6"

[tool.poetry.scripts]
npc-engine = "npc_engine.cli:main"
npc-server = "npc_engine.api.npc_api:main"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["npc_engine"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "google.adk.*",
    "google.genai.*",
    "google.generativeai.*"
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=npc_engine --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["npc_engine"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.adk]
name = "npc_engine"
description = "World-class intelligent NPC backend framework"
version = "1.0.0" 